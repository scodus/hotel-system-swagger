openapi: 3.0.0
info:
  title: Swagger
  description: Swagger
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
  - url: http://127.0.0.1:8000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: amenity
  - name: room type
  - name: room
paths:
  /api/amenity:
    post:
      tags:
        - amenity
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: amenity title
                description:
                  type: string
                  example: amenity description
                status:
                  type: string
                  example: Active
                icon:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - amenity
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/amenity/{id}:
    post:
      tags:
        - amenity
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: amenity title edit
                description:
                  type: string
                  example: amenity description edit
                icon:
                  type: string
                  format: binary
                status:
                  type: string
                  example: Active
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - amenity
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - amenity
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/room-type:
    post:
      tags:
        - room type
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title
                description:
                  type: string
                max_occupancy:
                  type: string
                no_of_adult:
                  type: string
                no_of_child:
                  type: string
                base_price:
                  type: string
                offer_price:
                  type: string
                discount_percent:
                  type: string
                tax_status:
                  type: string
                start_date:
                  type: string
                end_date:
                  type: string
                inclusions[0]:
                  type: string
                  example: inclusion1
                inclusions[1]:
                  type: string
                  example: inclusion2
                inclusions[2]:
                  type: string
                  example: inclusion3
                additional_price:
                  type: string
                hotel_id:
                  type: string
                status:
                  type: string
                  example: Active
                featured_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - room type
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/room-type/{id}:
    post:
      tags:
        - room type
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title
                description:
                  type: string
                max_occupancy:
                  type: string
                no_of_adult:
                  type: string
                no_of_child:
                  type: string
                base_price:
                  type: string
                offer_price:
                  type: string
                discount_percent:
                  type: string
                tax_status:
                  type: string
                start_date:
                  type: string
                end_date:
                  type: string
                inclusions[0]:
                  type: string
                  example: inclusion1
                inclusions[1]:
                  type: string
                  example: inclusion2
                inclusions[2]:
                  type: string
                  example: inclusion4
                additional_price:
                  type: string
                hotel_id:
                  type: string
                status:
                  type: string
                  example: Active
                _method:
                  type: string
                  example: patch
                featured_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - room type
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - room type
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/room:
    post:
      tags:
        - room
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title
                description:
                  type: string
                room_type_id:
                  type: integer
                  example: '2'
                status:
                  type: string
                  example: Active
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - room
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/room/{id}:
    post:
      tags:
        - room
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title edit
                description:
                  type: string
                room_type_id:
                  type: integer
                  example: '2'
                status:
                  type: string
                  example: Active
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - room
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - room
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - default
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@admin.com
                password:
                  type: string
                  example: P@ssw0rd
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - default
      summary: test
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/refresh-token:
    post:
      tags:
        - default
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: >-
                    def502002f4c8d14faa245f1c8b12f00afa31c896a91633ed0e860bfad2d14769ec89ae4df35bcfa830dd1709c948075a8016761921ba6fd2bd63ebf58ebbe52f596ab00ff75cde1f9ab60a6343e46c673ac7c029d1063544b4dd6ba319849373e82d68bbacf0fbb32f7d296ebd84f01398bc3f0e0a77106688cc293eb8af739cd491bcf07570a4b13ec41c7a9cac55308bca6d0cfe5e14bc5f14b576c3a2193520e4a028b80074887c2ff957d2a58ae846c4c4ec48f1d2e4ff1329be964bee0ba47d5d466188661257e8fd8a20ebba52f6ef1ec599cc9e3449c01d3bf895d9c0d078e7f5124c52816011549ab405a88cb8671b93e264830c95fe4a343edd99a30c3ad9293303cb37c34158361d3093256c1d2cc7b45c3c0b41e71924476403ccb57c101ba1cf8d93d4fe2704f5e081c3d138b3dd29702bdb5b17c391f9fa9f681da4879dde371770e3481e4776defe086d79390306626f294ed7e0f4bd3cf260965b68cac8aa41a51bada25e42e0cbf291c40242ed03b1fc952ec18d78de9e3f4905141c3fe62
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/register:
    post:
      tags:
        - default
      summary: register
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: tomnjerry
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                terms_and_conditions:
                  type: integer
                  example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/logout:
    post:
      tags:
        - default
      summary: logout
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
